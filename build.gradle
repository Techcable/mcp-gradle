apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group='net.techcable.mcp'
version='1.6.3-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        //MinecraftForge repo for Srg2Source
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven {
        //Because Srg2Source uses eclipse's AST
        name = "eclipse"
        url = "https://repo.eclipse.org/content/groups/eclipse/"
    }
    maven {
        //Because SpecialSource 1.7 is still beta
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

configurations {
    deployer
}

dependencies {
    provided 'org.projectlombok:lombok:1.16.4'
    compile 'org.ow2.asm:asm-debug-all:4.1'
    compile 'org.scala-lang:scala-library:2.11.1'
    compile 'com.google.guava:guava:14.0.1'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile 'net.md-5:SpecialSource:1.7-SNAPSHOT'
    compile 'net.minecraftforge.srg2source:Srg2Source:3.2-SNAPSHOT'
    compile 'de.oceanlabs.mcp:mcinjector:3.2-SNAPSHOT'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.cloudbees:diff4j:1.1'
    compile 'com.github.abrarsyed.jastyle:jAstyle:1.2'
    compile 'com.github.tony19:named-regexp:0.2.3'
    compile 'com.github.jponge:lzma-java:1.3'
    compile 'com.nothome:javaxdelta:2.0.1'

    compile gradleApi()

    deployer 'org.apache.maven.wagon:wagon-ssh:2.6'

    testCompile 'junit:junit:4.11'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

uploadArchives {
    if (project.hasProperty("deploymaven")) {
        logger.lifecycle('Deploying to file server')
        repositories.mavenDeployer {
            configuration = configurations.deployer
            repository(url: project.deploymaven.url) {
                authentication(userName: project.deploymaven.username, password: project.deploymaven.password)
            }
        }
    }else{
        logger.lifecycle('Deploying to mavenLocal')
        repositories{
            mavenLocal()
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        /*if(project.hasProperty("deploymaven")) {
            maven {
                url = project.deploymaven.url
                credentials {
                    username = project.deploymaven.username
                    password = project.deploymaven.password
                }
            }
        }*/
    }
}
